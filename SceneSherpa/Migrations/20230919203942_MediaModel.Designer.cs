// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SceneSherpa.DataAccess;

#nullable disable

namespace SceneSherpa.Migrations
{
    [DbContext(typeof(SceneSherpaContext))]
    [Migration("20230919203942_MediaModel")]
    partial class MediaModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SceneSherpa.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ProductionCompany")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("production_company");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int?>("UserId1")
                        .HasColumnType("integer")
                        .HasColumnName("user_id1");

                    b.Property<int?>("UserId2")
                        .HasColumnType("integer")
                        .HasColumnName("user_id2");

                    b.Property<int>("ViewCount")
                        .HasColumnType("integer")
                        .HasColumnName("view_count");

                    b.HasKey("Id")
                        .HasName("pk_media");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_media_user_id");

                    b.HasIndex("UserId1")
                        .HasDatabaseName("ix_media_user_id1");

                    b.HasIndex("UserId2")
                        .HasDatabaseName("ix_media_user_id2");

                    b.ToTable("media", (string)null);
                });

            modelBuilder.Entity("SceneSherpa.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("SceneSherpa.Models.Media", b =>
                {
                    b.HasOne("SceneSherpa.Models.User", null)
                        .WithMany("AllWatched")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_media_users_user_id");

                    b.HasOne("SceneSherpa.Models.User", null)
                        .WithMany("CurrentWatch")
                        .HasForeignKey("UserId1")
                        .HasConstraintName("fk_media_users_user_id1");

                    b.HasOne("SceneSherpa.Models.User", null)
                        .WithMany("ToWatch")
                        .HasForeignKey("UserId2")
                        .HasConstraintName("fk_media_users_user_id2");
                });

            modelBuilder.Entity("SceneSherpa.Models.User", b =>
                {
                    b.Navigation("AllWatched");

                    b.Navigation("CurrentWatch");

                    b.Navigation("ToWatch");
                });
#pragma warning restore 612, 618
        }
    }
}
